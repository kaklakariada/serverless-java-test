apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    compile (
        'com.amazonaws:aws-lambda-java-core:1.1.0',
        'com.amazonaws:aws-lambda-java-events:1.1.0'
    )
}

// Task for building the zip file for upload
task buildZip(type: Zip) {
    // Using the Zip API from gradle to build a zip file of all the dependencies
    //
    // The path to this zip file can be set in the serverless.yml file for the
    // package/artifact setting for deployment to the S3 bucket
    //
    // Link: https://docs.gradle.org/current/dsl/org.gradle.api.tasks.bundling.Zip.html

    // set the base name of the zip file
    baseName = "hello"
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtime
    }
}

build.dependsOn buildZip

task vscodeClasspathFile {
    description 'Generate classpath file for the Visual Studio Code java plugin'
    ext.destFile = file("$buildDir/classpath.txt")
    outputs.file destFile
    doLast {
        def classpathString = configurations.compile.collect { it.absolutePath }.join(':')
        assert destFile.parentFile.mkdir()
        destFile.text = classpathString
    }
}

task vscodeJavaconfigFile(dependsOn: vscodeClasspathFile) {
    description 'Generate javaconfig.json file for the Visual Studio Code java plugin'

    def relativePath = { File f ->
        f.absolutePath - "${project.rootDir.absolutePath}/"
    }

    ext.destFile = file("javaconfig.json")
    ext.classPathFile = relativePath(tasks.getByPath(':vscodeClasspathFile').outputs.files.singleFile)
    ext.sourcePaths = sourceSets.collect{ it.java.srcDirs }.flatten().collect{ relativePath(it) }
    ext.outputDirectory = relativePath(new File(buildDir, 'vscode-classes'))
    doLast {
        def config = [
            sourcePath: ext.sourcePaths,
            classPathFile: ext.classPathFile,
            outputDirectory: ext.outputDirectory
        ]
        def jsonContent = groovy.json.JsonOutput.toJson(config)
        destFile.text = groovy.json.JsonOutput.prettyPrint(jsonContent)
    }
}

task vscode(dependsOn: vscodeJavaconfigFile) {
    description 'Generares config files for the Visual Studio Code java plugin'
    group 'vscode'
}
